#questionsWrapper {
    padding: 1em;
    width: calc(100% - 2em);
}

.questionWrapper {
    background: var(--card-background);
    width: 100%;
    overflow: hidden;
    border-radius: 1em;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-content: flex-start;
    margin-bottom: 2em;
    height: calc(100vh - 146px - 2em);
}

.questionTitleWrapper {
    height: 10%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow-y: auto;
}

    .questionTitleWrapper h4 {
        text-align: center;
    }

.questionUrlWrapper {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
    padding: 0 1em;
    height: 30%;
    overflow: hidden;
}

    .questionUrlWrapper img {
        height: 100%;
        object-fit: contain;
        border-radius: 6px;
        pointer-events: none;
        width: calc(100% - 2em);
    }

.votationWrapper {
    height: 60%;
    width: 100%;
    position: relative;
}
    .votationWrapper .questionDescription {
        text-align: center;
        height: 20%;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
    }

        .votationWrapper .questionDescription span {
            color: var(--description-text);
            display: block;
            max-height: 63px;
            overflow: auto;
        }

    .votationWrapper .radioWrapper {
        background: var(--card-background-2);
        overflow: auto;
        height: inherit;
        display: flex;
        flex-direction: column;
        align-content: flex-start;
        flex-wrap: wrap;
    }

        .votationWrapper .radioWrapper .radioButtonWrapper {
            margin-left: 1em;
            display: flex;
            align-items: center;
            margin-top: 1em;
        }

            .votationWrapper .radioWrapper .radioButtonWrapper input[type=radio] {
                height: 35px;
                width: 35px;
                appearance: none;
                border-radius: 0.5em;
                background: var(--card-background);
                padding: 5px;
                border: 3px solid var(--radio-border-inactive);
            }

            .votationWrapper .radioWrapper .radioButtonWrapper input[type=radio]:checked{
                border: 3px solid var(--radio-border-active)
            }

            .votationWrapper .radioWrapper .radioButtonWrapper label{
                padding-left: 0.5em;
                width: 100px;
            }

.containerRadio {
    position: relative;
    padding-left: 40px;
    margin: 0.2em;
    padding-top: 5px;
    padding-bottom: 10px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default radio button */
  .containerRadio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }
  
  /* Create a custom radio button */
  .checkmarkRadio {
    position: absolute;
    top: 5px;
    left: 5px;
    height: 25px;
    width: 25px;
    background-color: var(--input-radio-background);
    border-radius: 50%; 
  }
  
  /* On mouse-over, add a grey background color */
  .containerRadio:hover input ~ .checkmarkRadio {
    background-color: var(--input-radio-background-hover);
  }
  
  /* When the radio button is checked, add a blue background */
  .containerRadio input:checked ~ .checkmarkRadio {
    background-color: var(--input-radio-background-active);
  }
  
  /* Create the indicator (the dot/circle - hidden when not checked) */
  .checkmarkRadio:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the indicator (dot/circle) when checked */
  .containerRadio input:checked ~ .checkmarkRadio:after {
    display: block;
  }
  
  /* Style the indicator (dot/circle) */
  .containerRadio .checkmarkRadio:after {
    top: 4.7px;
    left: 4.5px;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    background: var(--input-radio-checkmark);
  }

/* The container */
.containerCheckbox {
    position: relative;
    padding-left: 40px;
    margin: 0.2em;
    padding-top: 5px;
    padding-bottom: 10px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default checkbox */
  .containerCheckbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }
  
  /* Create a custom checkbox */
  .checkmarkCheckbox {
    position: absolute;
    left: 5px;
    display: inline-flex;
    height: 25px;
    width: 25px;
    background-color: var(--input-radio-background);
    border-radius: 4px;
  }
  
  /* On mouse-over, add a grey background color */
  .containerCheckbox:hover input ~ .checkmarkCheckbox {
    background-color: var(--input-radio-background-hover);
  }
  
  /* When the checkbox is checked, add a blue background */
  .containerCheckbox input:checked ~ .checkmarkCheckbox {
    background-color: var(--input-radio-background-active);
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmarkCheckbox:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .containerCheckbox input:checked ~ .checkmarkCheckbox:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .containerCheckbox .checkmarkCheckbox:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid var(--input-radio-checkmark);
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }


.questionFooter {
    width: 100%;
    height: 20%;
    display: flex;
    align-items: center;
    justify-content: center;
}

    .questionFooter button {
        width: 145px;
        height: 50px;
    }

.zoomedImageWrapper {
    overflow: auto;
    display: flex;
    flex-direction: column;
    align-content: center;
    flex-wrap: wrap;
    width: calc(100% - 2em);
    border-radius: 1em;
}

    .zoomedImageWrapper img {
        width: 100%;
    }


.errorEmptyChoices {
    text-align: center;
    display: flex;
    align-items: center;
    height: 100%;
    padding: 1em;
    color: var(--input-error-border);
}